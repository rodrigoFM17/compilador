
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSleftPLUSMINUSleftMULTIPLYDIVIDEASSIGN CLG COLON COMMA DIVIDE ELSE EQ FCT FOR GE GT ID IF KW_ENT KW_FLT KW_LG KW_STR KW_UNMUTABLE LBRACE LE LPAREN LT MINUS MULTIPLY NE NUMBER PLUS RBRACE RETURN RPAREN SCN SEMI STRING_END STRING_START STRING_TEXT STRING_VAR WHILEprograma : LBRACE sentencias RBRACEsentencias : \n                  | sentencias sentenciasentencia : declaracion\n                 | asignacion\n                 | funcion\n                 | estructura_control\n                 | kw_clg\n                 | expresion\n                 | retornoretorno : RETURN expresion SEMIretorno_opcional : COLON tipo\n                        | emptytipo_obligatorio : KW_ENT\n                        | KW_FLT\n                        | KW_LG\n                        | KW_STRfuncion : FCT ID LPAREN parametros RPAREN retorno_opcional LBRACE sentencias RBRACEparametros : parametro\n                  | parametro COMMA parametrosparametro : tipo_obligatorio IDdeclaracion : KW_UNMUTABLE tipo_obligatorio ID ASSIGN expresion SEMI\n                   | tipo_obligatorio ID ASSIGN expresion SEMI\n                   | KW_UNMUTABLE tipo_obligatorio ID SEMI\n                   | tipo_obligatorio ID SEMIasignacion : ID ASSIGN expresion SEMIexpresion : operacion_aritmetica SEMI\n                | llamada_funcion SEMI\n                | SCN SEMI\n                | retornooperacion_aritmetica : termino\n                           | operacion_aritmetica PLUS termino\n                           | operacion_aritmetica MINUS terminotermino : factor\n              | termino MULTIPLY factor\n              | termino DIVIDE factorfactor : NUMBER\n             | ID\n             | LPAREN operacion_aritmetica RPAREN\n             | llamada_funcion\n             | MINUS factor %prec UMINUSllamada_funcion : ID LPAREN argumentos RPARENargumentos : expresion\n                  | argumentos COMMA expresionestructura_control : estructura_if\n                         | ciclo_for\n                         | ciclo_whileestructura_if : IF LPAREN expresion_logica RPAREN LBRACE sentencias RBRACE else_opcionalelse_opcional : ELSE LBRACE sentencias RBRACE\n                    | emptyexpresion_logica : expresion operadores_comparacion expresionoperadores_comparacion : LT\n                             | GT\n                             | EQ\n                             | NE\n                             | LE\n                             | GEciclo_for : FOR LPAREN declaracion SEMI expresion_logica SEMI asignacion RPAREN LBRACE sentencias RBRACEciclo_while : WHILE LPAREN expresion_logica RPAREN LBRACE sentencias RBRACEkw_clg : CLG LPAREN string_content RPAREN SEMIstring_content : string_literal\n                     | IDstring_literal : STRING_START string_parts STRING_ENDstring_parts : \n                    | STRING_TEXT\n                    | STRING_VAR\n                    | string_parts STRING_TEXT\n                    | string_parts STRING_VARtipo : tipo_obligatorio\n            | emptyempty :'
    
_lr_action_items = {'LBRACE':([0,26,27,28,29,94,103,107,119,120,121,127,128,129,136,138,],[2,-14,-15,-16,-17,114,117,-71,126,-71,-13,-12,-69,-70,140,141,]),'$end':([1,4,],[0,-1,]),'RBRACE':([2,3,5,6,7,8,9,10,11,12,18,19,20,46,49,50,62,74,82,84,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,4,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-27,-28,-29,-25,-11,-24,-26,-23,-60,-2,-2,-22,130,133,-2,-71,-59,139,-48,-50,-18,-2,-2,144,145,-49,-58,]),'KW_UNMUTABLE':([2,3,5,6,7,8,9,10,11,12,18,19,20,46,49,50,55,62,74,82,84,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,13,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-27,-28,-29,13,-25,-11,-24,-26,-23,-60,-2,-2,-22,13,13,-2,-71,-59,13,-48,-50,-18,-2,-2,13,13,-49,-58,]),'ID':([2,3,5,6,7,8,9,10,11,12,14,16,17,18,19,20,25,26,27,28,29,34,37,39,40,45,46,47,48,49,50,54,56,57,58,61,62,74,81,82,84,86,89,95,96,97,98,99,100,101,102,105,110,114,117,118,123,124,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,15,-3,-4,-5,-6,-7,-8,-9,-10,38,41,43,-45,-46,-47,53,-14,-15,-16,-17,43,60,53,53,70,-27,43,43,-28,-29,53,53,43,43,53,-25,-11,53,-24,-26,53,109,53,-52,-53,-54,-55,-56,-57,53,-23,-60,-2,-2,-22,15,132,15,-2,-71,-59,15,-48,-50,-18,-2,-2,15,15,-49,-58,]),'FCT':([2,3,5,6,7,8,9,10,11,12,18,19,20,46,49,50,62,74,82,84,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,16,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-27,-28,-29,-25,-11,-24,-26,-23,-60,-2,-2,-22,16,16,-2,-71,-59,16,-48,-50,-18,-2,-2,16,16,-49,-58,]),'CLG':([2,3,5,6,7,8,9,10,11,12,18,19,20,46,49,50,62,74,82,84,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,21,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-27,-28,-29,-25,-11,-24,-26,-23,-60,-2,-2,-22,21,21,-2,-71,-59,21,-48,-50,-18,-2,-2,21,21,-49,-58,]),'SCN':([2,3,5,6,7,8,9,10,11,12,18,19,20,25,39,40,46,49,50,54,56,61,62,74,81,82,84,86,95,96,97,98,99,100,101,102,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,24,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,24,24,24,-27,-28,-29,24,24,24,-25,-11,24,-24,-26,24,24,-52,-53,-54,-55,-56,-57,24,-23,-60,-2,-2,-22,24,24,-2,-71,-59,24,-48,-50,-18,-2,-2,24,24,-49,-58,]),'RETURN':([2,3,5,6,7,8,9,10,11,12,18,19,20,25,39,40,46,49,50,54,56,61,62,74,81,82,84,86,95,96,97,98,99,100,101,102,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,25,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,25,25,25,-27,-28,-29,25,25,25,-25,-11,25,-24,-26,25,25,-52,-53,-54,-55,-56,-57,25,-23,-60,-2,-2,-22,25,25,-2,-71,-59,25,-48,-50,-18,-2,-2,25,25,-49,-58,]),'KW_ENT':([2,3,5,6,7,8,9,10,11,12,13,18,19,20,46,49,50,55,62,66,74,82,84,105,108,110,114,117,118,120,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,26,-3,-4,-5,-6,-7,-8,-9,-10,26,-45,-46,-47,-27,-28,-29,26,-25,26,-11,-24,-26,-23,26,-60,-2,-2,-22,26,26,26,-2,-71,-59,26,-48,-50,-18,-2,-2,26,26,-49,-58,]),'KW_FLT':([2,3,5,6,7,8,9,10,11,12,13,18,19,20,46,49,50,55,62,66,74,82,84,105,108,110,114,117,118,120,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,27,-3,-4,-5,-6,-7,-8,-9,-10,27,-45,-46,-47,-27,-28,-29,27,-25,27,-11,-24,-26,-23,27,-60,-2,-2,-22,27,27,27,-2,-71,-59,27,-48,-50,-18,-2,-2,27,27,-49,-58,]),'KW_LG':([2,3,5,6,7,8,9,10,11,12,13,18,19,20,46,49,50,55,62,66,74,82,84,105,108,110,114,117,118,120,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,28,-3,-4,-5,-6,-7,-8,-9,-10,28,-45,-46,-47,-27,-28,-29,28,-25,28,-11,-24,-26,-23,28,-60,-2,-2,-22,28,28,28,-2,-71,-59,28,-48,-50,-18,-2,-2,28,28,-49,-58,]),'KW_STR':([2,3,5,6,7,8,9,10,11,12,13,18,19,20,46,49,50,55,62,66,74,82,84,105,108,110,114,117,118,120,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,29,-3,-4,-5,-6,-7,-8,-9,-10,29,-45,-46,-47,-27,-28,-29,29,-25,29,-11,-24,-26,-23,29,-60,-2,-2,-22,29,29,29,-2,-71,-59,29,-48,-50,-18,-2,-2,29,29,-49,-58,]),'IF':([2,3,5,6,7,8,9,10,11,12,18,19,20,46,49,50,62,74,82,84,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,30,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-27,-28,-29,-25,-11,-24,-26,-23,-60,-2,-2,-22,30,30,-2,-71,-59,30,-48,-50,-18,-2,-2,30,30,-49,-58,]),'FOR':([2,3,5,6,7,8,9,10,11,12,18,19,20,46,49,50,62,74,82,84,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,31,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-27,-28,-29,-25,-11,-24,-26,-23,-60,-2,-2,-22,31,31,-2,-71,-59,31,-48,-50,-18,-2,-2,31,31,-49,-58,]),'WHILE':([2,3,5,6,7,8,9,10,11,12,18,19,20,46,49,50,62,74,82,84,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,32,-3,-4,-5,-6,-7,-8,-9,-10,-45,-46,-47,-27,-28,-29,-25,-11,-24,-26,-23,-60,-2,-2,-22,32,32,-2,-71,-59,32,-48,-50,-18,-2,-2,32,32,-49,-58,]),'NUMBER':([2,3,5,6,7,8,9,10,11,12,17,18,19,20,25,34,39,40,46,47,48,49,50,54,56,57,58,61,62,74,81,82,84,86,95,96,97,98,99,100,101,102,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,36,-3,-4,-5,-6,-7,-8,-9,-10,36,-45,-46,-47,36,36,36,36,-27,36,36,-28,-29,36,36,36,36,36,-25,-11,36,-24,-26,36,36,-52,-53,-54,-55,-56,-57,36,-23,-60,-2,-2,-22,36,36,-2,-71,-59,36,-48,-50,-18,-2,-2,36,36,-49,-58,]),'LPAREN':([2,3,5,6,7,8,9,10,11,12,15,17,18,19,20,21,25,30,31,32,34,39,40,41,43,46,47,48,49,50,53,54,56,57,58,61,62,74,81,82,84,86,95,96,97,98,99,100,101,102,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,17,-3,-4,-5,-6,-7,-8,-9,-10,40,17,-45,-46,-47,45,17,54,55,56,17,17,17,66,40,-27,17,17,-28,-29,40,17,17,17,17,17,-25,-11,17,-24,-26,17,17,-52,-53,-54,-55,-56,-57,17,-23,-60,-2,-2,-22,17,17,-2,-71,-59,17,-48,-50,-18,-2,-2,17,17,-49,-58,]),'MINUS':([2,3,5,6,7,8,9,10,11,12,15,17,18,19,20,22,23,25,33,34,35,36,39,40,42,43,44,46,47,48,49,50,53,54,56,57,58,59,61,62,67,72,73,74,79,80,81,82,84,85,86,95,96,97,98,99,100,101,102,105,110,114,117,118,123,125,126,130,133,134,135,137,139,140,141,142,143,144,145,],[-2,34,-3,-4,-5,-6,-7,-8,-9,-10,-38,34,-45,-46,-47,48,-40,34,-31,34,-34,-37,34,34,48,-38,-40,-27,34,34,-28,-29,-38,34,34,34,34,-41,34,-25,-39,-32,-33,-11,-35,-36,34,-24,-26,-42,34,34,-52,-53,-54,-55,-56,-57,34,-23,-60,-2,-2,-22,34,34,-2,-71,-59,34,-48,-50,-18,-2,-2,34,34,-49,-58,]),'ASSIGN':([15,38,60,132,],[39,61,81,39,]),'MULTIPLY':([15,23,33,35,36,43,44,53,59,67,72,73,79,80,85,],[-38,-40,57,-34,-37,-38,-40,-38,-41,-39,57,57,-35,-36,-42,]),'DIVIDE':([15,23,33,35,36,43,44,53,59,67,72,73,79,80,85,],[-38,-40,58,-34,-37,-38,-40,-38,-41,-39,58,58,-35,-36,-42,]),'SEMI':([15,22,23,24,33,35,36,38,43,44,46,49,50,51,52,53,59,60,62,63,67,72,73,74,77,79,80,82,83,85,90,104,105,115,116,118,],[-38,46,49,50,-31,-34,-37,62,-38,-40,-27,-28,-29,74,-30,-38,-41,82,-25,84,-39,-32,-33,-11,102,-35,-36,-24,105,-42,110,118,-23,-51,124,-22,]),'PLUS':([15,22,23,33,35,36,42,43,44,53,59,67,72,73,79,80,85,],[-38,47,-40,-31,-34,-37,47,-38,-40,-38,-41,-39,-32,-33,-35,-36,-42,]),'RPAREN':([33,35,36,42,43,44,46,49,50,52,59,64,65,67,68,69,70,72,73,74,75,78,79,80,84,85,87,88,106,109,111,115,122,131,],[-31,-34,-37,67,-38,-40,-27,-28,-29,-30,-41,85,-43,-39,90,-61,-62,-32,-33,-11,94,103,-35,-36,-26,-42,107,-19,-44,-21,-63,-51,-20,138,]),'STRING_START':([45,],[71,]),'COMMA':([46,49,50,52,64,65,74,88,106,109,],[-27,-28,-29,-30,86,-43,-11,108,-44,-21,]),'LT':([46,49,50,52,74,76,],[-27,-28,-29,-30,-11,96,]),'GT':([46,49,50,52,74,76,],[-27,-28,-29,-30,-11,97,]),'EQ':([46,49,50,52,74,76,],[-27,-28,-29,-30,-11,98,]),'NE':([46,49,50,52,74,76,],[-27,-28,-29,-30,-11,99,]),'LE':([46,49,50,52,74,76,],[-27,-28,-29,-30,-11,100,]),'GE':([46,49,50,52,74,76,],[-27,-28,-29,-30,-11,101,]),'STRING_END':([71,91,92,93,112,113,],[-64,111,-65,-66,-67,-68,]),'STRING_TEXT':([71,91,92,93,112,113,],[92,112,-65,-66,-67,-68,]),'STRING_VAR':([71,91,92,93,112,113,],[93,113,-65,-66,-67,-68,]),'COLON':([107,],[120,]),'ELSE':([130,],[136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,114,117,126,140,141,],[3,123,125,134,142,143,]),'sentencia':([3,123,125,134,142,143,],[5,5,5,5,5,5,]),'declaracion':([3,55,123,125,134,142,143,],[6,77,6,6,6,6,6,]),'asignacion':([3,123,124,125,134,142,143,],[7,7,131,7,7,7,7,]),'funcion':([3,123,125,134,142,143,],[8,8,8,8,8,8,]),'estructura_control':([3,123,125,134,142,143,],[9,9,9,9,9,9,]),'kw_clg':([3,123,125,134,142,143,],[10,10,10,10,10,10,]),'expresion':([3,25,39,40,54,56,61,81,86,95,102,123,125,134,142,143,],[11,51,63,65,76,76,83,104,106,115,76,11,11,11,11,11,]),'retorno':([3,25,39,40,54,56,61,81,86,95,102,123,125,134,142,143,],[12,52,52,52,52,52,52,52,52,52,52,12,12,12,12,12,]),'tipo_obligatorio':([3,13,55,66,108,120,123,125,134,142,143,],[14,37,14,89,89,128,14,14,14,14,14,]),'estructura_if':([3,123,125,134,142,143,],[18,18,18,18,18,18,]),'ciclo_for':([3,123,125,134,142,143,],[19,19,19,19,19,19,]),'ciclo_while':([3,123,125,134,142,143,],[20,20,20,20,20,20,]),'operacion_aritmetica':([3,17,25,39,40,54,56,61,81,86,95,102,123,125,134,142,143,],[22,42,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'llamada_funcion':([3,17,25,34,39,40,47,48,54,56,57,58,61,81,86,95,102,123,125,134,142,143,],[23,44,23,44,23,23,44,44,23,23,44,44,23,23,23,23,23,23,23,23,23,23,]),'termino':([3,17,25,39,40,47,48,54,56,61,81,86,95,102,123,125,134,142,143,],[33,33,33,33,33,72,73,33,33,33,33,33,33,33,33,33,33,33,33,]),'factor':([3,17,25,34,39,40,47,48,54,56,57,58,61,81,86,95,102,123,125,134,142,143,],[35,35,35,59,35,35,35,35,35,35,79,80,35,35,35,35,35,35,35,35,35,35,]),'argumentos':([40,],[64,]),'string_content':([45,],[68,]),'string_literal':([45,],[69,]),'expresion_logica':([54,56,102,],[75,78,116,]),'parametros':([66,108,],[87,122,]),'parametro':([66,108,],[88,88,]),'string_parts':([71,],[91,]),'operadores_comparacion':([76,],[95,]),'retorno_opcional':([107,],[119,]),'empty':([107,120,130,],[121,129,137,]),'tipo':([120,],[127,]),'else_opcional':([130,],[135,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> LBRACE sentencias RBRACE','programa',3,'p_programa','all.py',123),
  ('sentencias -> <empty>','sentencias',0,'p_sentencias','all.py',127),
  ('sentencias -> sentencias sentencia','sentencias',2,'p_sentencias','all.py',128),
  ('sentencia -> declaracion','sentencia',1,'p_sentencia','all.py',135),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','all.py',136),
  ('sentencia -> funcion','sentencia',1,'p_sentencia','all.py',137),
  ('sentencia -> estructura_control','sentencia',1,'p_sentencia','all.py',138),
  ('sentencia -> kw_clg','sentencia',1,'p_sentencia','all.py',139),
  ('sentencia -> expresion','sentencia',1,'p_sentencia','all.py',140),
  ('sentencia -> retorno','sentencia',1,'p_sentencia','all.py',141),
  ('retorno -> RETURN expresion SEMI','retorno',3,'p_retorno','all.py',145),
  ('retorno_opcional -> COLON tipo','retorno_opcional',2,'p_retorno_opcional','all.py',149),
  ('retorno_opcional -> empty','retorno_opcional',1,'p_retorno_opcional','all.py',150),
  ('tipo_obligatorio -> KW_ENT','tipo_obligatorio',1,'p_tipo_obligatorio','all.py',154),
  ('tipo_obligatorio -> KW_FLT','tipo_obligatorio',1,'p_tipo_obligatorio','all.py',155),
  ('tipo_obligatorio -> KW_LG','tipo_obligatorio',1,'p_tipo_obligatorio','all.py',156),
  ('tipo_obligatorio -> KW_STR','tipo_obligatorio',1,'p_tipo_obligatorio','all.py',157),
  ('funcion -> FCT ID LPAREN parametros RPAREN retorno_opcional LBRACE sentencias RBRACE','funcion',9,'p_funcion','all.py',161),
  ('parametros -> parametro','parametros',1,'p_parametros','all.py',167),
  ('parametros -> parametro COMMA parametros','parametros',3,'p_parametros','all.py',168),
  ('parametro -> tipo_obligatorio ID','parametro',2,'p_parametro','all.py',176),
  ('declaracion -> KW_UNMUTABLE tipo_obligatorio ID ASSIGN expresion SEMI','declaracion',6,'p_declaracion','all.py',180),
  ('declaracion -> tipo_obligatorio ID ASSIGN expresion SEMI','declaracion',5,'p_declaracion','all.py',181),
  ('declaracion -> KW_UNMUTABLE tipo_obligatorio ID SEMI','declaracion',4,'p_declaracion','all.py',182),
  ('declaracion -> tipo_obligatorio ID SEMI','declaracion',3,'p_declaracion','all.py',183),
  ('asignacion -> ID ASSIGN expresion SEMI','asignacion',4,'p_asignacion','all.py',194),
  ('expresion -> operacion_aritmetica SEMI','expresion',2,'p_expresion','all.py',198),
  ('expresion -> llamada_funcion SEMI','expresion',2,'p_expresion','all.py',199),
  ('expresion -> SCN SEMI','expresion',2,'p_expresion','all.py',200),
  ('expresion -> retorno','expresion',1,'p_expresion','all.py',201),
  ('operacion_aritmetica -> termino','operacion_aritmetica',1,'p_operacion_aritmetica','all.py',205),
  ('operacion_aritmetica -> operacion_aritmetica PLUS termino','operacion_aritmetica',3,'p_operacion_aritmetica','all.py',206),
  ('operacion_aritmetica -> operacion_aritmetica MINUS termino','operacion_aritmetica',3,'p_operacion_aritmetica','all.py',207),
  ('termino -> factor','termino',1,'p_termino','all.py',214),
  ('termino -> termino MULTIPLY factor','termino',3,'p_termino','all.py',215),
  ('termino -> termino DIVIDE factor','termino',3,'p_termino','all.py',216),
  ('factor -> NUMBER','factor',1,'p_factor','all.py',223),
  ('factor -> ID','factor',1,'p_factor','all.py',224),
  ('factor -> LPAREN operacion_aritmetica RPAREN','factor',3,'p_factor','all.py',225),
  ('factor -> llamada_funcion','factor',1,'p_factor','all.py',226),
  ('factor -> MINUS factor','factor',2,'p_factor','all.py',227),
  ('llamada_funcion -> ID LPAREN argumentos RPAREN','llamada_funcion',4,'p_llamada_funcion','all.py',234),
  ('argumentos -> expresion','argumentos',1,'p_argumentos','all.py',238),
  ('argumentos -> argumentos COMMA expresion','argumentos',3,'p_argumentos','all.py',239),
  ('estructura_control -> estructura_if','estructura_control',1,'p_estructura_control','all.py',246),
  ('estructura_control -> ciclo_for','estructura_control',1,'p_estructura_control','all.py',247),
  ('estructura_control -> ciclo_while','estructura_control',1,'p_estructura_control','all.py',248),
  ('estructura_if -> IF LPAREN expresion_logica RPAREN LBRACE sentencias RBRACE else_opcional','estructura_if',8,'p_estructura_if','all.py',252),
  ('else_opcional -> ELSE LBRACE sentencias RBRACE','else_opcional',4,'p_else_opcional','all.py',256),
  ('else_opcional -> empty','else_opcional',1,'p_else_opcional','all.py',257),
  ('expresion_logica -> expresion operadores_comparacion expresion','expresion_logica',3,'p_expresion_logica','all.py',261),
  ('operadores_comparacion -> LT','operadores_comparacion',1,'p_operadores_comparacion','all.py',265),
  ('operadores_comparacion -> GT','operadores_comparacion',1,'p_operadores_comparacion','all.py',266),
  ('operadores_comparacion -> EQ','operadores_comparacion',1,'p_operadores_comparacion','all.py',267),
  ('operadores_comparacion -> NE','operadores_comparacion',1,'p_operadores_comparacion','all.py',268),
  ('operadores_comparacion -> LE','operadores_comparacion',1,'p_operadores_comparacion','all.py',269),
  ('operadores_comparacion -> GE','operadores_comparacion',1,'p_operadores_comparacion','all.py',270),
  ('ciclo_for -> FOR LPAREN declaracion SEMI expresion_logica SEMI asignacion RPAREN LBRACE sentencias RBRACE','ciclo_for',11,'p_ciclo_for','all.py',274),
  ('ciclo_while -> WHILE LPAREN expresion_logica RPAREN LBRACE sentencias RBRACE','ciclo_while',7,'p_ciclo_while','all.py',278),
  ('kw_clg -> CLG LPAREN string_content RPAREN SEMI','kw_clg',5,'p_kw_clg','all.py',282),
  ('string_content -> string_literal','string_content',1,'p_string_content','all.py',286),
  ('string_content -> ID','string_content',1,'p_string_content','all.py',287),
  ('string_literal -> STRING_START string_parts STRING_END','string_literal',3,'p_string_literal','all.py',291),
  ('string_parts -> <empty>','string_parts',0,'p_string_parts','all.py',295),
  ('string_parts -> STRING_TEXT','string_parts',1,'p_string_parts','all.py',296),
  ('string_parts -> STRING_VAR','string_parts',1,'p_string_parts','all.py',297),
  ('string_parts -> string_parts STRING_TEXT','string_parts',2,'p_string_parts','all.py',298),
  ('string_parts -> string_parts STRING_VAR','string_parts',2,'p_string_parts','all.py',299),
  ('tipo -> tipo_obligatorio','tipo',1,'p_tipo','all.py',309),
  ('tipo -> empty','tipo',1,'p_tipo','all.py',310),
  ('empty -> <empty>','empty',0,'p_empty','all.py',314),
]
